class KButton extends HTMLElement{get _tpl(){return`\n      <style>\n        :host([hidden]) { display: none; }\n        :host { display: inline-block; }\n\n        button {\n          font: inherit;\n          color: inherit;\n          border: 0;\n          background-color: transparent;\n          cursor: pointer;\n          padding: 0;\n        }\n\n        button::-moz-focus-inner {\n          padding: 0;\n          border: 0;\n        }\n\n        :host([disabled]) button {\n          opacity: var(--k-button-disabled-opacity, 0.7);\n          cursor: default;\n          pointer-events: none;\n        }\n\n        button:focus > span {\n          box-shadow: var(--k-buton-focus-box-shadow, 0 0 0 2px rgb(35, 189, 234));\n        }\n\n        button:hover > span {\n          background-color: var(--k-button-hover-background-color);\n        }\n\n        button:active > span {\n          background-color: var(--k-button-active-background-color);\n        }\n\n        button > span {\n          position: relative;\n          display: block;\n          padding: var(--k-button-padding);\n          background-color: var(--k-button-background-color);\n          border-radius: var(--k-button-border-radius);\n          min-width: var(--k-button-min-width);\n          @apply --k-button;\n        }\n\n        button:not(:-moz-focusring):focus > span {\n          box-shadow: none;\n        }\n\n        button:focus,\n        button > span:focus {\n          outline: none;\n        }\n      </style>\n\n      <button tabindex="0" autocomplete="off" type="button">\n        <span tabindex="-1">\n          <slot></slot>\n        </span>\n      </button>\n    `}static get observedAttributes(){return["autofocus","disabled"]}get disabled(){return this.hasAttribute("disabled")}set disabled(val){val?this.setAttribute("disabled",""):this.removeAttribute("disabled")}get autofocus(){return this.hasAttribute("autofocus")}get type(){return this.getAttribute("type")}get form(){return this.getAttribute("form")}get noSubmit(){return this.hasAttribute("no-submit")}set noSubmit(val){val?this.setAttribute("no-submit",""):this.removeAttribute("no-submit")}constructor(){super(),this.attachShadow({mode:"open"}).innerHTML=this._tpl,this.button=this.shadowRoot.querySelector("button"),this.addEventListener("click",()=>this.type&&this._callFormMethod())}attributeChangedCallback(attr,oldVal,newVal){null===newVal?this.button.removeAttribute(attr):this.button.setAttribute(attr,this.getAttribute(attr))}_callFormMethod(){let target=this.form?this.closest(this.form):this.parentNode;this.type in target&&("submit"===this.type&&this.noSubmit?target.dispatchEvent(new Event("submit")):target[this.type]())}}window.customElements.define("k-button",KButton);